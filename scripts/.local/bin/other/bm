#!/bin/sh
# this script bookmarks paths.

# Config
bookmarks="$XDG_DATA_HOME/bm/bookmarks"
fs='[ \\t]*\\|[ \\t]*'

main ()
{
    # make fzf fullscreen if -f is supplied
    [ "$1" = -f ] && shift && height='--height=100%'

    case "$1" in
        a | add) add "$2" ;;
        rm | remove) shift; remove "$@" ;;
        l | list) list ;;
        '') get_path "$(selector)" ;;
        *) get_path "$@" ;;
    esac
}

get_path ()
{
    local bm_name="$1"
    [ -z "$bm_name" ] && return 1

    singular="${bm_name%s}"
    plural="${singular}s"

    local found_path="$(
        awkfn -v bm="$bm_name" -v si="$singular" -v pl="$plural" \
            '$1==bm || $1==si || $1==pl {print $2; exit}' "$bookmarks"
    )"

    if [ $? -ne 0 ] || [ -z "$found_path" ]; then
        return 1
    fi

    eval echo "$found_path/"
}

selector ()
{
    awkfn 'NF {print $1}' "$bookmarks" | fzf --prompt=goto: $height
    return $?
}

add ()
{
    [ -n "$1" ] &&
        local bm_name="$1" ||
        local bm_name="$(basename "$PWD")"

    local current_path="$(echo "$PWD" | sed "s/\/home\/$USER/~/")"
    get_path "$bm_name" >/dev/null ||
        echo "$bm_name | $current_path" >> "$bookmarks"
}

remove ()
{
    for arg; do
        local bm_name="$arg"
        local new="$(
            awkfn -v bm="$bm_name" '$1 != bm {print $0}' "$bookmarks"
        )"
        [ $? -ne 0 ] && return 1
        echo "$new" > "$bookmarks"
    done
}

list ()
{
    awkfn '{print $1}' "$bookmarks"
}

awkfn ()
{
    awk -v FS="$fs" "$@"
}

main "$@"
exit
