#!/bin/sh
# cycle audio output devices.

main () {
    case "$1" in
       -g) set_glyph; exit ;;
        *)
            vars
            pactl set-default-sink "$next_sink_id"
            set_glyph
            dwmbarref audio
            switch_programs "$next_sink_id" ;;
    esac
}

switch_programs () {
    pactl list short sink-inputs | cut -f1 | while IFS= read -r program; do
        pactl move-sink-input "$program" "$1"
    done
}

set_glyph () {
    conf=~/.config/dwmbar/audio-glyphs
    glyph="${XDG_RUNTIME_DIR:-/tmp}/dwmbar/audio_glyph"
    mkdir -p "$(dirname "$glyph")"
    [ ! -r $conf ] && echo ï€¨  > "$glyph" && exit
    sink="$next_sink_name"
    [ -z "$sink" ] &&
        sink="$(pactl info | grep -i '^default sink' | cut -d: -f2- | tr -d ' ')"
    awk -F'->' -v c="$sink" 'match(c,$2){print$1}' $conf > "$glyph"
}

vars () {
    list="$(pactl list short sinks)"
    current_sink_name="$(pactl info | grep -i '^default sink' | cut -d: -f2- | tr -d ' ')"
    list_of_ids="$(echo "$list" | cut -f1)"
    first_id="$(echo "$list_of_ids" | head -n1)"
    current_sink_id=$(echo "$list" | grep "$current_sink_name" | cut -f1)
    id_loop="$(echo "$list_of_ids"; echo "$first_id")"
    next_sink_id="$(get_next_sink)"
    next_sink_name="$(echo "$list" | grep -w "^$next_sink_id" | cut -f2)"
}

get_next_sink () {
    echo "$id_loop" | while IFS= read -r id; do
        [ "$id" = "$current_sink_id" ] && read -r id && echo "$id"
    done
}

main "$@"
exit
